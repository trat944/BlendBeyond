// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String   @unique
  password    String
  pictureId   String?
  pictureUrl  String?
  birthdate   DateTime?
  age         Int?
  city        String?
  sex         String?
  lookingFor  String?
  likedBy     Like[]   @relation("LikedUsers")
  likedUsers  Like[]   @relation("LikedBy")
  dislikedBy  Dislike[]   @relation("DislikedUsers")
  dislikedUsers      Dislike[] @relation("DislikedBy")
  createAt    DateTime @default(now())
  updateAt    DateTime @updatedAt
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  from      User     @relation("LikedBy", fields: [fromId], references: [id])
  fromId    String
  to        User     @relation("LikedUsers", fields: [toId], references: [id])
  toId      String
  createdAt DateTime @default(now())
}

model Dislike {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  from      User     @relation("DislikedUsers", fields: [fromId], references: [id])
  fromId    String
  to        User     @relation("DislikedBy", fields: [toId], references: [id])
  toId      String
  createdAt DateTime @default(now())
}